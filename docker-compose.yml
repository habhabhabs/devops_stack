version: "3.8"
networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.20.11.0/24
services:
  duckdns:
    image: ghcr.io/linuxserver/duckdns:latest
    restart: always
    env_file: ./etc/duckdns.env
  swag:
    image: ghcr.io/linuxserver/swag:latest
    cap_add:
      - NET_ADMIN
    restart: always
    env_file: ./etc/swag.env
    volumes:
     - ./var/swag:/config
    ports:
     - "443:443"
     - "80:80"
  smtp-sgdevlab:
    image: namshi/smtp:latest
    restart: always
    env_file: ./etc/smtp.env
  mariadb:
    image: "mariadb:${MARIADB_IMAGE_VERSION}"
    restart: always
    env_file: ./etc/docker.env
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./etc/mariadb/init.d:/docker-entrypoint-initdb.d
      - ./etc/mariadb/conf.d:/etc/mysql/conf.d
      - ./var/mariadb:/var/lib/mysql
    ports:
      - "3306:3306"
  kiwi:
    image: "kiwitcms/kiwi:${KIWI_IMAGE_VERSION}"
    restart: always
    env_file: ./etc/docker.env
    depends_on:
      - mariadb
    volumes:
      - ./etc/kiwitcms/local_settings.py:/venv/lib64/python3.8/site-packages/tcms/settings/local_settings.py
      - ./var/kiwitcms:/Kiwi/uploads
  dokuwiki:
    image: "ghcr.io/linuxserver/dokuwiki:${DOKUWIKI_IMAGE_VERSION}"
    restart: always
    env_file: ./etc/docker.env
    volumes:
      - ./var/dokuwiki:/config
    # ports:
    #   - "80:80"
  keycloak:
    image: "jboss/keycloak:${KEYCLOAK_IMAGE_VERSION}"
    restart: always
    env_file: ./etc/docker.env
    volumes:
      - ./var/keycloak/tmp:/tmp
      - ./var/keycloak/data:/opt/jboss/keycloak/standalone/data
    # ports:
    #   - "8080:8080"
    #   - "8443:8443"
  gitea:
    image: "gitea/gitea:${GITEA_IMAGE_VERSION}"
    restart: always
    env_file: ./etc/docker.env
    depends_on:
      - mariadb
    volumes:
      - ./var/gitea:/data
      - ./etc/tz/sgt_timezone:/etc/timezone:ro
      - ./etc/tz/sgt_localtime:/etc/localtime:ro
  drone:
    image: "drone/drone:${DRONE_IMAGE_VERSION}"
    restart: always
    env_file: ./etc/docker.env
    depends_on:
      - gitea
    volumes:
      - ./var/drone:/data
  drone-runner:
    image: "drone/drone-runner-docker:${DRONE_DOCKER_RUNNER_IMAGE_VERSION}"
    restart: always
    env_file: ./etc/docker.env
    depends_on:
      - drone
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  wboboard:
    image: lovasoa/wbo
    restart: always
    volumes:
      - ./var/wboboard:/opt/app/server-data
    #ports:
    #  - "8111:80"
  # vault:
  #   image: "vault:${VAULT_IMAGE_VERSION}"
  #   cap_add:
  #     - IPC_LOCK
  #   restart: always
  #   env_file: ./etc/docker.env
  #   command: server
  #   volumes:
  #     - ./var/vault:/vault/file
  nexus:
    image: "sonatype/nexus3:${NEXUS_IMAGE_VERSION}"
    restart: always
    volumes:
      - ./var/nexus:/nexus-data
    # ports:
    # - 8081

